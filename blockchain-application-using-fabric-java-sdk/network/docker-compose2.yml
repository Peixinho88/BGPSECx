version: '2'

volumes:
  peer0.org2.example.com:
  peer1.org2.example.com:

networks:
  custom:
    #external: true acho que tenho de usar isto se quiser usar o Docker Swarm

services:

  ca.org2.example.com:
    image: hyperledger/fabric-ca:1.4.1
    environment:
      - FABRIC_START_TIMEOUT=30
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org2
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server/6458478be958a3b785125513cc91b9d826fa04a9879b5ec7fbe06f19fd97d455_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ../network_resources/crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server
    container_name: ca_peerOrg2
    networks:
      - custom
    extra_hosts:
      - "ca.org1.example.com:192.168.1.184"
      - "orderer.example.com:"
      - "peer0.org1.example.com:192.168.1.184"
      - "peer1.org1.example.com:192.168.1.184"
      - "cli:192.168.1.184"
      - "ca.org3.example.com:192.168.1.184"
      - "peer0.org3.example.com:192.168.1.184"
      - "peer1.org3.example.com:192.168.1.184"
      - "cli:192.168.1.184"
      - "ca.org4.example.com:192.168.1.184"
      - "peer0.org4.example.com:192.168.1.184"
      - "peer1.org4.example.com:192.168.1.184"
      - "cli:192.168.1.184"   

  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer:1.4.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org2.example.com
      #- CORE_PEER_TLS_ENABLED=true
      #- CORE_PEER_TLS_CLIENTAUTHREQUIRED=true
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      #- CORE_PEER_ADDRESS=172.19.0.4:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org2.example.com:7051 #REMOVE THIS IF IT STOPS WORKING
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051 #REMOVE THIS IF IT STOPS WORKING
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 7051:7051
      - 7053:7053
    networks:
      - custom
    volumes:
        - /var/run/:/host/var/run/
        - ../network_resources/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp
        - ../network_resources/crypto-config/peerOrganizations/org2.example.com/users:/etc/hyperledger/msp/users
        - ../network_resources/config:/etc/hyperledger/configtx
        #- /tmp/fabric/data/peer0.org2.example.com:/var/hyperledger/production
    #depends_on:
    #  - orderer.example.com
    extra_hosts:
      - "ca.org1.example.com:192.168.1.184"
      - "orderer.example.com:"
      - "peer0.org1.example.com:192.168.1.184"
      - "peer1.org1.example.com:192.168.1.184"
      - "cli:192.168.1.184"
      - "ca.org3.example.com:192.168.1.184"
      - "peer0.org3.example.com:192.168.1.184"
      - "peer1.org3.example.com:192.168.1.184"
      - "cli:192.168.1.184"
      - "ca.org4.example.com:192.168.1.184"
      - "peer0.org4.example.com:192.168.1.184"
      - "peer1.org4.example.com:192.168.1.184"
      - "cli:192.168.1.184"  

  peer1.org2.example.com:
    container_name: peer1.org2.example.com
    image: hyperledger/fabric-peer:1.4.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.org2.example.com
      #- CORE_PEER_TLS_ENABLED=true
      #- CORE_PEER_TLS_CLIENTAUTHREQUIRED=true
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
      #- CORE_PEER_ADDRESS=172.19.0.4:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051 #REMOVE THIS IF IT STOPS WORKING
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.example.com:7051 #REMOVE THIS IF IT STOPS WORKING
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    networks:
      - custom
    ports:
      - 7056:7051
      - 7058:7053
    volumes:
        - /var/run/:/host/var/run/
        - ../network_resources/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp:/etc/hyperledger/fabric/msp
        - ../network_resources/crypto-config/peerOrganizations/org2.example.com/users:/etc/hyperledger/msp/users
        - ../network_resources/config:/etc/hyperledger/configtx
        #- /tmp/fabric/data/peer1.org2.example.com:/var/hyperledger/production
    #depends_on:
    #  - orderer.example.com
    extra_hosts:
      - "ca.org1.example.com:192.168.1.184"
      - "orderer.example.com:"
      - "peer0.org1.example.com:192.168.1.184"
      - "peer1.org1.example.com:192.168.1.184"
      - "cli:192.168.1.184"
      - "ca.org3.example.com:192.168.1.184"
      - "peer0.org3.example.com:192.168.1.184"
      - "peer1.org3.example.com:192.168.1.184"
      - "cli:192.168.1.184"
      - "ca.org4.example.com:192.168.1.184"
      - "peer0.org4.example.com:192.168.1.184"
      - "peer1.org4.example.com:192.168.1.184"
      - "cli:192.168.1.184"  

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:1.4.1
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_START_TIMEOUT=30
      #- CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:1.4.1
      - CORE_LOGGING_PEER=debug
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      #- CORE_PEER_ADDRESS=172.19.0.4:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
      #- CORE_PEER_TLS_ENABLED=true
      #- CORE_PEER_TLS_CLIENTAUTHREQUIRED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    ports:
      - 7061:8888
      - 7064:9999
    extra_hosts:
      - "ca.org1.example.com:192.168.1.184"
      - "orderer.example.com:"
      - "peer0.org1.example.com:192.168.1.184"
      - "peer1.org1.example.com:192.168.1.184"
      - "cli:192.168.1.184"
      - "ca.org3.example.com:192.168.1.184"
      - "peer0.org3.example.com:192.168.1.184"
      - "peer1.org3.example.com:192.168.1.184"
      - "cli:192.168.1.184"
      - "ca.org4.example.com:192.168.1.184"
      - "peer0.org4.example.com:192.168.1.184"
      - "peer1.org4.example.com:192.168.1.184"
      - "cli:192.168.1.184"   

    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ../network_resources/chaincode/:/opt/gopath/src/github.com/chaincode
      - ../network_resources/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
      - ../network_resources/scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
      - ../network_resources/config:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      - ../network_resources/ccp:/opt/gopath/src/github.com/hyperledger/fabric/peer/ccp
    depends_on:
      - peer0.org2.example.com
      - peer1.org2.example.com
    networks:
      - custom

